#!/usr/bin/env bash
#set -x

LOGFILE="fugit.log"
CONFFILE="fugit.conf"
CONFDIR="$HOME/fugit"

contains(){
	[ -f $1 ] || return 1
	grep --fixed-strings --silent --line-regexp $2 $1
	return $?
}

push(){
	#read repo config
	eval $CONFDIR/$REPO.conf

	printf "%s %s: Trying to push to %s (Path %s)\n" "$(date)" "$FUGIT_USER" "$1" "$REAL" >> $LOGFILE
	if [ -z "$REAL" ]; then
		printf "%s %s: Unknown repo, abort\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
		printf "FAIL"
		return 1
	fi

	#do access control
	if contains "$PUSH" "$FUGIT_USER"; then
		git-receive-pack "$REAL"
		printf "%s %s: Push accepted\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
	else
		printf "%s %s: Push rejected\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
		printf "FAIL"
	fi
}

pull(){
	#read repo config
	eval "$CONFDIR/$REPO.conf"

	printf "%s %s: Trying to read from %s (Path %s)\n" "$(date)" "$FUGIT_USER" "$1" "$REAL" >> $LOGFILE
	if [ -z "$REAL" ]; then
		printf "%s %s: Unknown repo, abort\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
		printf "FAIL"
		return 1
	fi

	#do access control
	if contains "$PULL" "$FUGIT_USER"; then
		git-upload-pack "$REAL"
		printf "%s %s: Pull accepted\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
	else
		printf "%s %s: Pull rejected\n" "$(date)" "$FUGIT_USER" >> $LOGFILE
		printf "FAIL"
	fi
}

FUGIT_USER=$1
if [ -z "$FUGIT_USER" ]; then
	printf "%s UNKNOWN: No user name supplied\n" "$(date)" >> $LOGFILE
	exit 1
fi

printf "%s %s: Command is %s\n" "$(date)" "$FUGIT_USER" "$SSH_ORIGINAL_COMMAND" >> $LOGFILE
if [[ "$SSH_ORIGINAL_COMMAND" == "git-receive-pack "* ]]; then
	#extract argument
	REPO=${SSH_ORIGINAL_COMMAND#git-receive-pack }

	#remove quotes (without opening injection possibilities)
	REPO=$(echo $REPO | xargs echo)

	#remove all path information
	REPO=$(echo $REPO | sed 's/\//-/g')

	printf "%s %s: push to repo %s\n" "$(date)" "$FUGIT_USER" "$REPO" >> $LOGFILE
	push "$REPO"

elif [[ "$SSH_ORIGINAL_COMMAND" == "git-upload-pack "* ]]; then
	#extract argument
	REPO=${SSH_ORIGINAL_COMMAND#git-upload-pack }

	#remove quotes (without opening injection possibilities)
	REPO=$(echo $REPO | xargs echo)

	#remove all path information
	REPO=$(echo $REPO | sed 's/\//-/g')

	printf "%s %s: pull from repo %s\n" "$(date)" "$FUGIT_USER" "$REPO" >> $LOGFILE
	pull "$REPO"

else
	printf "%s %s: Unknown command %s\n" "$(date)" "$FUGIT_USER" "$SSH_ORIGINAL_COMMAND" >> $LOGFILE
	exit 1
fi
